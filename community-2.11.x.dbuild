//
// Define a set of common settings for all projects, and include
// all the 2.11 projects. The included file also contains a large set of
// vars definitions, which are used later in this file as well.
//


vars.base: {
}
include file("common-2.11.x.conf")

//
// The notification section for this build file
//
options.notifications: {
  send:[{
    when: bad
    projects: "."
    send.to: ["qbranch@typesafe.com"]
  },{
    when: bad
    projects: "akka"
    send.to: ["akka.official@gmail.com"]
  },{
    when: bad
    projects: "slick"
    send.to: ["stefan.zeiger@typesafe.com"]
  },{
    kind: flowdock
    when: bad
    send.detail: short
  },{
    projects: "."
    kind: console
    when: always
  }]
  default: [{
    kind: email
    send: {
      from: "jenkins-dbuild <mailer@typesafe.com>"
      smtp.server: "psemail.epfl.ch"
      smtp.encryption: none
    }
  },{
    kind: flowdock
    projects: "."
    send: {
      from: "dbuild"
      token: "/home/jenkinsdbuild/dbuild-q.token"
    }
  }]
}

//
// And the generation of the artifacts more closely related to the Scala compiler.
//
build += {
  extraction-version: "2.11.0-M8"
  cross-version: disabled
  sbt-version: ${vars.sbt-version-override}
  sbt-java-options:     ["-XX:+CMSClassUnloadingEnabled",
     "-XX:+DoEscapeAnalysis",
     "-Xms1536m",
     "-Xmx1536m",
     "-Xss2m",
     "-XX:ReservedCodeCacheSize=192m"]
  projects: [
  // Scala 2.11.x
  {
    name:  "scala",
    system: assemble
    extra.parts: {
      cross-version: standard
      sbt-version: ${vars.sbt-version-override}
      extraction-version: "2.11.0-M8"
      cross-version: disabled
    }
    extra.parts.projects: [
      {
        system: "scala"
        name:  "scala"
        uri:    "https://github.com/"${vars.scala-ref}
        extra.build-options: ["-Dlocker.skip=1", "-Ddocs.skip=1"] // speed things up a little
      }
      {
        name: "scala-xml"
        uri: "https://github.com/"${vars.scala-xml-ref}
      }
      {
        name: "scala-parser-combinators"
        uri: "https://github.com/"${vars.scala-parser-combinators-ref}
      }
    ]
  }

  ${vars.base} {
    name: "scala-continuations"
    uri: "https://github.com/"${vars.scala-continuations-ref}
    extra.sbt-version: ${vars.sbt-version-override}
    // Trying to avoid unexplained error on Toolbox based tests: "bad option: -P:continuations:enable"
    // This is reproducible outside of dbuild, but hard to pin down.
    // Example: https://gist.github.com/retronym/9122414
    // Note the plugin JAR was rebuild on inspect `test:test`, even though there was no source change.
    // After that, the next `test` worked.
    extra.commands: ["clean", "plugin/compile:package"]
  }

  ${vars.base} {
    name: "scala-partest"
    uri: "https://github.com/"${vars.scala-partest-ref}
  }

  ${vars.base} {
    name: scalacheck
    uri:    "https://github.com/"${vars.scalacheck-ref}
    extra.run-tests: false
  }

  ${vars.base} {
    name: "scala-swing"
    uri: "https://github.com/"${vars.scala-swing-ref}
  }
]
}
